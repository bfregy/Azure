{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {          
    "hostpoolType": {
        "defaultValue": "Pooled",      
        "allowedValues": [
            "Pooled",
            "Personal"
        ],
        "type": "String",
        "metadata": {
            "description": "Set this parameter to Personal if you would like to enable Persistent Desktop experience. Defaults to false."
        }
    },    
    "personalDesktopAssignmentType": {
        "defaultValue": "Automatic",
        "allowedValues": [
            "Automatic",
            "Direct",
            ""
        ],
        "type": "String",
        "metadata": {
            "description": "Set the type of assignment for a Personal hostpool type"
        }
    },    
    "maxSessionLimit": {
        "defaultValue": 99999,
        "type": "Int",
        "metadata": {
            "description": "Maximum number of sessions."
        }
    },     
    "loadBalancerType": {
        "defaultValue": "BreadthFirst",
        "allowedValues": [
            "BreadthFirst",
            "DepthFirst",
            "Persistent"
        ],
        "type": "String",
        "metadata": {
            "description": "Type of load balancer algorithm."
        }
    },   
    "tokenExpirationTime": {
        "defaultValue": "2021-04-20T08:59:45.813Z",
        "type": "String",
        "metadata": {
            "description": "Hostpool token expiration time"
        }
    },    
    "validationEnvironment": {
        "defaultValue": false,
        "type": "Bool",
        "metadata": {
            "description": "Whether to use validation enviroment."
        }
    },      
    "preferredAppGroupType": {
        "defaultValue": "Desktop",
        "type": "String",
        "metadata": {
            "description": "Preferred App Group type to display"
        }
    },
    "vmDiskType": {
        "defaultValue": "StandardSSD_LRS",
        "allowedValues": [
            "Premium_LRS",
            "StandardSSD_LRS",
            "Standard_LRS"
        ],
        "type": "String",
        "metadata": {
            "description": "The VM disk type for the VM: HDD or SSD."
        }
    },
    "vmnumberofInstances": {
        "defaultValue": 1,
        "type": "int",
        "metadata": {
            "description": "Enter the number of WVD Vms"
        }
    },    
    "vmInitialNumber": {
        "defaultValue": 0,
        "type": "int",
        "metadata": {
            "description": "VM name prefix initial number."
        }
    },   
    "availabilitySetUpdateDomainCount": {
        "defaultValue": 5,
        "allowedValues": [
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20
        ],
        "type": "Int",
        "metadata": {
            "description": "The platform update domain count of avaiability set to be created."
        }
    },
    "availabilitySetFaultDomainCount": {
        "defaultValue": 2,
        "allowedValues": [
            1,
            2,
            3
        ],
        "type": "Int",
        "metadata": {
            "description": "The platform fault domain count of avaiability set to be created."
        }
    },    
    "Ring": {
        "defaultValue": 1,
        "type": "Int",
        "metadata": {
            "description": ""
        }
    }, 
    "adminUsername": {
        "type": "string",
        "metadata": {
            "description": "The name of the Administrator of the new VM and Domain"
        }
    },
    "adminPassword": {
        "type": "securestring",
      "metadata": {
        "description": "The password for the Administrator account of the new VM and Domain"
      }
    },      
    "WVDToken": {
        "type": "string",
      "metadata": {
        "description": "The password for the Administrator account of the new VM and Domain"
      }
    },       
    "NamingConvention": {
      "type": "string",
      "defaultValue": "khl",
      "metadata": {
        "description": "VNet1 Name"
      }
    },
    "SubDNSDomain": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
          "description": "Sub DNS Domain Name Example:  sub1. must include a DOT AT END"
      }
    },     
    "SubDNSBaseDN": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
          "description": "Sub DNS Domain Name Example:  DC=sub2,DC=sub1, must include COMMA AT END"
      }
    },            
    "InternalDomain": {
      "type": "string",
      "defaultValue": "killerhomelab",
      "metadata": {
          "description": "NetBios Domain Name"
      }
    },       
    "InternalTLD": {
      "type": "string",
      "defaultValue": "com",
      "allowedValues": [
        "com",
        "net",
        "org",
        "edu",
        "gov",
        "mil"
      ],      
      "metadata": {
          "description": "Top-Level Domain Name"
      }
    },                            
    "WVDVMSize": {
      "type": "string",
      "defaultValue": "Standard_D2s_v3",
      "metadata": {
          "description": "WVD VMSize"
      }
    },              
    "_artifactsLocation": {
      "type": "string",
      "metadata": {
          "description": "The location of resources, such as templates and DSC modules, that the template depends on"
      },
      "defaultValue": "[deployment().properties.templateLink.uri]"
    },
    "_artifactsLocationSasToken": {
        "type": "securestring",
        "metadata": {
            "description": "Auto-generated token to access _artifactsLocation. Leave it blank unless you need to provide your own value."
        },
        "defaultValue": ""
    }
  },
  "variables": {
    "wvdadmin": "[concat(parameters('adminUsername'),'@',variables('InternaldomainName'))]",
    "vnet1Name": "[concat(parameters('NamingConvention'),'-VNet1')]",
    "vnet1subnet1Name": "[concat(parameters('NamingConvention'),'-VNet1-Subnet1')]",    
    "subnet-Id": "[resourceId(resourceGroup().name, 'Microsoft.Network/virtualNetworks/subnets', variables('vnet1Name'), variables('Vnet1Subnet1Name'))]",    
    "HostPoolARMPath": "[resourceId(resourceGroup().name, 'Microsoft.DesktopVirtualization/hostpools', variables('HostPoolName'))]",        
    "InternaldomainName": "[concat(parameters('SubDNSDomain'),parameters('InternalDomain'),'.',parameters('InternalTLD'))]",
    "BaseDN": "[concat(parameters('SubDNSBaseDN'),'DC=',parameters('InternalDomain'),',DC=',parameters('InternalTLD'))]",
    "WKOUPath": "[concat('OU=Windows 10,OU=Workstations,',variables('BaseDN'))]",
    "HostPoolName": "[concat(parameters('NamingConvention'),'-Hosted-Pool')]",
    "AppGroupName": "[concat(variables('HostPoolName'),'-DAG')]",    
    "WorkSpaceName": "[concat(variables('HostPoolName'),'-WorkSpace')]",   
    "allApplicationGroupReferences": "",         
    "AvailabilitySetName": "[concat(variables('HostPoolName'),'-AVSet')]",  
    "vmTemplate": "{\"domain\":\"wvd.killerhomelab.com\",\"galleryImageOffer\":\"office-365\",\"galleryImagePublisher\":\"MicrosoftWindowsDesktop\",\"galleryImageSKU\":\"20h1-evd-o365pp\",\"imageType\":\"Gallery\",\"imageUri\":null,\"customImageId\":null,\"namePrefix\":\"khla\",\"osDiskType\":\"StandardSSD_LRS\",\"useManagedDisks\":true,\"vmSize\":{\"id\":\"Standard_D2s_v3\",\"cores\":2,\"ram\":8},\"galleryItemId\":\"MicrosoftWindowsDesktop.office-36520h1-evd-o365pp\"}",
    "vmGalleryImageOffer": "office-365",
    "vmGalleryImagePublisher": "MicrosoftWindowsDesktop",
    "vmGalleryImageSKU": "20h1-evd-o365pp",
    "rdshPrefix": "[concat(parameters('NamingConvention'),'-')]",    
    "artifactsLocation":    "https://wvdportalstorageblob.blob.core.windows.net/galleryartifacts/Configuration.zip"
  },  
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "createpublicdns",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'), concat('linkedtemplates/PublicDNSZone.json', parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
        },
        "parameters": {
            "ZoneName": {
                "value": "[variables('InternaldomainName')]"
            }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "DeployHostedPool",     
      "properties": {
        "mode": "Incremental",
        "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'), concat('linkedtemplates/wvdpool.json', parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
        },
        "parameters": {
            "HostPoolName": {
                "value": "[variables('HostPoolName')]"
            },
            "HostPoolType": {
                "value": "[parameters('HostPoolType')]"
            },
            "personalDesktopAssignmentType": {
                "value": "[parameters('personalDesktopAssignmentType')]"
            },
            "maxSessionLimit": {
                "value": "[parameters('maxSessionLimit')]"
            },
            "loadBalancerType": {
                "value": "[parameters('loadBalancerType')]"
            },
            "vmTemplate": {
                "value": "[variables('vmTemplate')]"
            },
            "tokenExpirationTime": {
                "value": "[parameters('tokenExpirationTime')]"
            },
            "validationEnvironment": {
                "value": "[parameters('validationEnvironment')]"
            },
            "preferredAppGroupType": {
                "value": "[parameters('preferredAppGroupType')]"
            },
            "Ring": {
                "value": "[parameters('Ring')]"
            },
            "Token": {
                "value": "[parameters('WVDToken')]"
            },                                                                                    
            "location": {
                "value": "[resourceGroup().location]"
            }                                                                                                                   
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "DeployApplicationGroup",   
      "dependsOn": [
        "DeployHostedPool"
      ],   
      "properties": {
        "mode": "Incremental",
        "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'), concat('linkedtemplates/applicationgroup.json', parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
        },
        "parameters": {
            "NamingConvention": {
                "value": "[parameters('NamingConvention')]"
            },
            "HostPoolARMPath": {
                "value": "[variables('HostPoolARMPath')]"
            },
            "AppGroupName": {
                "value": "[variables('AppGroupName')]"
            },            
            "location": {
                "value": "[resourceGroup().location]"
            }                                                                                                                   
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "DeployWorkspace",   
      "dependsOn": [
        "DeployApplicationGroup"
      ],   
      "properties": {
        "mode": "Incremental",
        "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'), concat('linkedtemplates/workspace.json', parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
        },
        "parameters": {
            "AppGroupName": {
                "value": "[variables('AppGroupName')]"
            },
            "WorkSpaceName": {
                "value": "[variables('WorkSpaceName')]"
            },
            "allApplicationGroupReferences": {
                "value": "[variables('allApplicationGroupReferences')]"
            },                                                                                                  
            "location": {
                "value": "[resourceGroup().location]"
            } 
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "DeployAVSet",   
      "dependsOn": [
        "DeployWorkspace"
      ],   
      "properties": {
        "mode": "Incremental",
        "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'), concat('linkedtemplates/avset.json', parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
        },
        "parameters": {
            "AvailabilitySetName": {
                "value": "[variables('AvailabilitySetName')]"
            },
            "availabilitySetUpdateDomainCount": {
                "value": "[parameters('availabilitySetUpdateDomainCount')]"
            },
            "availabilitySetFaultDomainCount": {
                "value": "[parameters('availabilitySetFaultDomainCount')]"
            },            
            "location": {
                "value": "[resourceGroup().location]"
            } 
        }
      }
    },          
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "DeploySessionHosts",   
      "dependsOn": [
        "DeployAVSet"
      ],   
      "properties": {
        "mode": "Incremental",
        "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'), concat('linkedtemplates/sessionhosts.json', parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
        },
        "parameters": {
            "availabilitySetName": {
                "value": "[variables('availabilitySetName')]"
            },
            "vmGalleryImageOffer": {
                "value": "[variables('vmGalleryImageOffer')]"
            },
            "vmGalleryImagePublisher": {
                "value": "[variables('vmGalleryImagePublisher')]"
            },
            "vmGalleryImageSKU": {
                "value": "[variables('vmGalleryImageSKU')]"
            },
            "rdshPrefix": {
                "value": "[variables('rdshPrefix')]"
            },
            "rdshNumberOfInstances": {
                "value": "[parameters('vmNumberOfInstances')]"
            },
            "rdshVMDiskType": {
                "value": "[parameters('vmDiskType')]"
            },
            "rdshVmSize": {
                "value": "[parameters('WVDVMSize')]"
            },
            "enableAcceleratedNetworking": {
                "value": false
            },            
            "subnet-id": {
                "value": "[variables('subnet-id')]"
            },
            "location": {
                "value": "[resourceGroup().location]"
            },
            "vmInitialNumber": {
                "value": "[parameters('vmInitialNumber')]"
            },       
            "hostpoolToken": {
                "value": "[parameters('WVDToken')]"              
            },
            "hostpoolName": {
                "value": "[variables('hostpoolName')]"
            },
            "ouPath": {
                "value": "[variables('WKOUPath')]"
            },            
            "domain": {
                "value": "[variables('InternalDomainName')]"
            },
            "administratorAccountUsername": {
                "value": "[variables('wvdadmin')]"
            },
            "administratorAccountPassword": {
                "value": "[parameters('adminPassword')]"
            },
            "artifactsLocation": {
                "value": "[variables('artifactsLocation')]"
            }            
        }
      }
    }               
  ]
}