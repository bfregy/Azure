{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {          
    "NamingConvention": {
      "type": "string",
      "defaultValue": "khl",
      "metadata": {
        "description": "Naming Convention for Lab Objects"
      }
    }, 
    "vnet0ID": {
      "type": "string",
      "defaultValue": "10.1",
      "metadata": {
        "description": "OnPrem VNet Prefix"
      }
    },  
    "vnet1ID": {
      "type": "string",
      "defaultValue": "10.20",
      "metadata": {
        "description": "Spoke VNet Prefix"
      }
    },  
    "vnet2ID": {
      "type": "string",
      "defaultValue": "10.21",
      "metadata": {
        "description": "Hub VNet Prefix"
      }
    },
    "roleAssignmentGuid1": {
        "type": "string",
        "defaultValue": "[newGuid()]",
        "metadata": {
            "description": "A new GUID used to identify the role assignment"
        }
    },   
    "roleAssignmentGuid2": {
        "type": "string",
        "defaultValue": "[newGuid()]",
        "metadata": {
            "description": "A new GUID used to identify the role assignment"
        }
    },                                                                  
    "_artifactsLocation": {
      "type": "string",
      "metadata": {
          "description": "The location of resources, such as templates and DSC modules, that the template depends on"
      },
      "defaultValue": "[deployment().properties.templateLink.uri]"
    },
    "_artifactsLocationSasToken": {
        "type": "securestring",
        "metadata": {
            "description": "Auto-generated token to access _artifactsLocation. Leave it blank unless you need to provide your own value."
        },
        "defaultValue": ""
    }
  },
  "variables": {
    "vnet0Name": "[concat(parameters('NamingConvention'),'-OnPrem-VNet')]",
    "vnet0Prefix": "[concat(parameters('vnet0ID'),'.0.0/16')]",
    "vnet0subnet1Name": "[concat(parameters('NamingConvention'),'-OnPrem-VNet-Subnet1')]",    
    "vnet0subnet1Prefix": "[concat(parameters('vnet0ID'),'.1.0/24')]",    
    "vnet0subnet2Name": "[concat(parameters('NamingConvention'),'-OnPrem-VNet-Subnet2')]",    
    "vnet0subnet2Prefix": "[concat(parameters('vnet0ID'),'.2.0/24')]",    
    "vnet0BastionsubnetPrefix": "[concat(parameters('vnet0ID'),'.253.0/24')]",        
    "vnet1Name": "[concat(parameters('NamingConvention'),'-Hub-VNet')]",
    "vnet1Prefix": "[concat(parameters('vnet1ID'),'.0.0/16')]",
    "vnet1subnet1Name": "[concat(parameters('NamingConvention'),'-Hub-VNet-Subnet1')]",    
    "vnet1subnet1Prefix": "[concat(parameters('vnet1ID'),'.1.0/24')]",    
    "vnet1subnet2Name": "[concat(parameters('NamingConvention'),'-Hub-VNet-Subnet2')]",    
    "vnet1subnet2Prefix": "[concat(parameters('vnet1ID'),'.2.0/24')]",    
    "vnet1BastionsubnetPrefix": "[concat(parameters('vnet1ID'),'.253.0/24')]",        
    "vnet2Name": "[concat(parameters('NamingConvention'),'-Spoke-VNet')]",
    "vnet2Prefix": "[concat(parameters('vnet2ID'),'.0.0/16')]",
    "vnet2subnet1Name": "[concat(parameters('NamingConvention'),'-Spoke-VNet-Subnet1')]",    
    "vnet2subnet1Prefix": "[concat(parameters('vnet2ID'),'.1.0/24')]",    
    "vnet2subnet2Name": "[concat(parameters('NamingConvention'),'-Spoke-VNet-Subnet2')]",    
    "vnet2subnet2Prefix": "[concat(parameters('vnet2ID'),'.2.0/24')]",    
    "vnet2BastionsubnetPrefix": "[concat(parameters('vnet2ID'),'.253.0/24')]",  
    "DockerBridgeCIDR": "17.17.0.0/16",              
    "dnsserviceIP": "[concat(parameters('vnet1ID'),'.1.101')]",                    
    "DNSZone": "[concat('privatelink.',resourceGroup().location,'.cx.aks.containerservice.azure.us')]",
    "AKSClusterName": "[concat(parameters('NamingConvention'),'-AKS-Private-Cluster')]",
    "ManagedIDName": "[concat(parameters('NamingConvention'),'-mi-', uniqueString(resourceGroup().id))]",
    "DNSZoneContributor": "[concat('Microsoft.Network/privateDNSZones/', variables('DNSZone'), '/providers/Microsoft.Authorization/roleDefinitions/', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
    "SpokeVNetContributor": "[concat('/Microsoft.Network/virtualNetworks/', variables('vnet2Name'), '/providers/Microsoft.Authorization/roleDefinitions/', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]"    

  },  
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "DeployOnPremVNet",
      "properties": {
          "mode": "Incremental",
          "templateLink": {
              "uri": "[uri(parameters('_artifactsLocation'), concat('linkedtemplates/vnet.json', parameters('_artifactsLocationSasToken')))]",
              "contentVersion": "1.0.0.0"
          },
          "parameters": {
              "vnetName": {
                  "value": "[variables('vnet0Name')]"
              },
              "vnetprefix": {
                  "value": "[variables('vnet0Prefix')]"
              },
              "subnet1Name": {
                  "value": "[variables('vnet0subnet1Name')]"
              },
              "subnet1Prefix": {
                  "value": "[variables('vnet0subnet1Prefix')]"
              },
              "subnet2Name": {
                "value": "[variables('vnet0subnet2Name')]"
              },
              "subnet2Prefix": {
                "value": "[variables('vnet0subnet2Prefix')]"
              },              
              "BastionsubnetPrefix": {
                "value": "[variables('vnet0BastionsubnetPrefix')]"
              },              
              "location": {
                  "value": "[resourceGroup().location]"
              }
          }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "DeployOnPremBastionHost",
      "dependsOn": [
        "DeployOnPremVNet"
      ],
      "properties": {
          "mode": "Incremental",
          "templateLink": {
              "uri": "[uri(parameters('_artifactsLocation'), concat('linkedtemplates/bastionhost.json', parameters('_artifactsLocationSasToken')))]",
              "contentVersion": "1.0.0.0"
          },
          "parameters": {
              "publicIPAddressName": {
                "value": "[concat(variables('vnet0Name'),'-Bastion-pip')]"
              },
              "AllocationMethod": {
                "value": "Static"
              },              
              "vnetName": {
                  "value": "[variables('vnet0Name')]"
              },
              "subnetName": {
                  "value": "AzureBastionSubnet"
              },
              "location": {
                  "value": "[resourceGroup().location]"
              }
          }
      }
    },            
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "DeployHubVNet",
      "properties": {
          "mode": "Incremental",
          "templateLink": {
              "uri": "[uri(parameters('_artifactsLocation'), concat('linkedtemplates/vnet.json', parameters('_artifactsLocationSasToken')))]",
              "contentVersion": "1.0.0.0"
          },
          "parameters": {
              "vnetName": {
                  "value": "[variables('vnet1Name')]"
              },
              "vnetprefix": {
                  "value": "[variables('vnet1Prefix')]"
              },
              "subnet1Name": {
                  "value": "[variables('vnet1subnet1Name')]"
              },
              "subnet1Prefix": {
                  "value": "[variables('vnet1subnet1Prefix')]"
              },
              "subnet2Name": {
                "value": "[variables('vnet1subnet2Name')]"
              },
              "subnet2Prefix": {
                "value": "[variables('vnet1subnet2Prefix')]"
              },              
              "BastionsubnetPrefix": {
                "value": "[variables('vnet1BastionsubnetPrefix')]"
              },              
              "location": {
                  "value": "[resourceGroup().location]"
              }
          }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "DeployHubBastionHost",
      "dependsOn": [
        "DeployHubVNet"
      ],
      "properties": {
          "mode": "Incremental",
          "templateLink": {
              "uri": "[uri(parameters('_artifactsLocation'), concat('linkedtemplates/bastionhost.json', parameters('_artifactsLocationSasToken')))]",
              "contentVersion": "1.0.0.0"
          },
          "parameters": {
              "publicIPAddressName": {
                "value": "[concat(variables('vnet1Name'),'-Bastion-pip')]"
              },
              "AllocationMethod": {
                "value": "Static"
              },              
              "vnetName": {
                  "value": "[variables('vnet1Name')]"
              },
              "subnetName": {
                  "value": "AzureBastionSubnet"
              },
              "location": {
                  "value": "[resourceGroup().location]"
              }
          }
      }
    },                
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "DeploySpokeVNet",
      "properties": {
          "mode": "Incremental",
          "templateLink": {
              "uri": "[uri(parameters('_artifactsLocation'), concat('linkedtemplates/vnet.json', parameters('_artifactsLocationSasToken')))]",
              "contentVersion": "1.0.0.0"
          },
          "parameters": {
              "vnetName": {
                  "value": "[variables('vnet2Name')]"
              },
              "vnetprefix": {
                  "value": "[variables('vnet2Prefix')]"
              },
              "subnet1Name": {
                  "value": "[variables('vnet2subnet1Name')]"
              },
              "subnet1Prefix": {
                  "value": "[variables('vnet2subnet1Prefix')]"
              },
              "subnet2Name": {
                "value": "[variables('vnet2subnet2Name')]"
              },
              "subnet2Prefix": {
                "value": "[variables('vnet2subnet2Prefix')]"
              },              
              "BastionsubnetPrefix": {
                "value": "[variables('vnet2BastionsubnetPrefix')]"
              },              
              "location": {
                  "value": "[resourceGroup().location]"
              }
          }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "DeploySpokeBastionHost",
      "dependsOn": [
        "DeploySpokeVNet"
      ],
      "properties": {
          "mode": "Incremental",
          "templateLink": {
              "uri": "[uri(parameters('_artifactsLocation'), concat('linkedtemplates/bastionhost.json', parameters('_artifactsLocationSasToken')))]",
              "contentVersion": "1.0.0.0"
          },
          "parameters": {
              "publicIPAddressName": {
                "value": "[concat(variables('vnet2Name'),'-Bastion-pip')]"
              },
              "AllocationMethod": {
                "value": "Static"
              },              
              "vnetName": {
                  "value": "[variables('vnet2Name')]"
              },
              "subnetName": {
                  "value": "AzureBastionSubnet"
              },
              "location": {
                  "value": "[resourceGroup().location]"
              }
          }
      }
    },    
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "PeeringFromHubToSpoke",
      "dependsOn": [
        "DeployHubVNet",
        "DeploySpokeVNet"
      ],            
      "properties": {
          "mode": "Incremental",
          "templateLink": {
              "uri": "[uri(parameters('_artifactsLocation'), concat('linkedtemplates/peering.json', parameters('_artifactsLocationSasToken')))]",
              "contentVersion": "1.0.0.0"
          },
          "parameters": {
              "SourceVNetName": {
                "value": "[variables('vnet1Name')]"
              },
              "TargetVNetName": {
                "value": "[variables('vnet2Name')]"
              },              
              "allowVirtualNetworkAccess": {
                "value": "true"
              },                                                                                                                                                                                                                                                                                                           
              "allowForwardedTraffic": {
                "value": "true"
              },                                                                                                                                                                                                                                                                                                           
              "allowGatewayTransit": {
                "value": "false"
              },
              "useRemoteGateways": {
                "value": "false"
              }
              "location": {
                  "value": "[resourceGroup().location]"
              }
          }
      }
    },  
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "PeeringFromSpokeToHub",
      "dependsOn": [
        "PeeringFromHubToSpoke"
      ],            
      "properties": {
          "mode": "Incremental",
          "templateLink": {
              "uri": "[uri(parameters('_artifactsLocation'), concat('linkedtemplates/peering.json', parameters('_artifactsLocationSasToken')))]",
              "contentVersion": "1.0.0.0"
          },
          "parameters": {
              "SourceVNetName": {
                "value": "[variables('vnet2Name')]"
              },
              "TargetVNetName": {
                "value": "[variables('vnet1Name')]"
              },              
              "allowVirtualNetworkAccess": {
                "value": "true"
              },                                                                                                                                                                                                                                                                                                           
              "allowForwardedTraffic": {
                "value": "true"
              },                                                                                                                                                                                                                                                                                                           
              "allowGatewayTransit": {
                "value": "false"
              },
              "useRemoteGateways": {
                "value": "false"
              }
              "location": {
                  "value": "[resourceGroup().location]"
              }
          }
      }
    }, 
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "PeeringFromHubToOnPrem",
      "dependsOn": [
        "DeployHubVNet",
        "DeployONPremVNet"
      ],            
      "properties": {
          "mode": "Incremental",
          "templateLink": {
              "uri": "[uri(parameters('_artifactsLocation'), concat('linkedtemplates/peering.json', parameters('_artifactsLocationSasToken')))]",
              "contentVersion": "1.0.0.0"
          },
          "parameters": {
              "SourceVNetName": {
                "value": "[variables('vnet1Name')]"
              },
              "TargetVNetName": {
                "value": "[variables('vnet0Name')]"
              },              
              "allowVirtualNetworkAccess": {
                "value": "true"
              },                                                                                                                                                                                                                                                                                                           
              "allowForwardedTraffic": {
                "value": "true"
              },                                                                                                                                                                                                                                                                                                           
              "allowGatewayTransit": {
                "value": "false"
              },
              "useRemoteGateways": {
                "value": "false"
              }
              "location": {
                  "value": "[resourceGroup().location]"
              }
          }
      }
    }, 
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "PeeringFromOnPremToHub",
      "dependsOn": [
        "PeeringFromHubToOnPrem"
      ],            
      "properties": {
          "mode": "Incremental",
          "templateLink": {
              "uri": "[uri(parameters('_artifactsLocation'), concat('linkedtemplates/peering.json', parameters('_artifactsLocationSasToken')))]",
              "contentVersion": "1.0.0.0"
          },
          "parameters": {
              "SourceVNetName": {
                "value": "[variables('vnet0Name')]"
              },
              "TargetVNetName": {
                "value": "[variables('vnet1Name')]"
              },              
              "allowVirtualNetworkAccess": {
                "value": "true"
              },                                                                                                                                                                                                                                                                                                           
              "allowForwardedTraffic": {
                "value": "true"
              },                                                                                                                                                                                                                                                                                                           
              "allowGatewayTransit": {
                "value": "false"
              },
              "useRemoteGateways": {
                "value": "false"
              }
              "location": {
                  "value": "[resourceGroup().location]"
              }
          }
      }
    },            
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "DeployPrivateDNSZone",
      "dependsOn": [
        "DeployOnPremVNet",
        "DeployHubVNet",
        "DeploySpokeVNet",
        "PeeringFromHubToSpoke",
        "PeeringFromSpokeToHub",   
        "PeeringFromHubToOnPrem",      
        "PeeringFromOnPremToHub"
      ],            
      "properties": {
          "mode": "Incremental",
          "templateLink": {
              "uri": "[uri(parameters('_artifactsLocation'), concat('linkedtemplates/PrivateDNSZone.json', parameters('_artifactsLocationSasToken')))]",
              "contentVersion": "1.0.0.0"
          },
          "parameters": {
              "ZoneName": {
                  "value": "[variables('DNSZone')]"
              },
              "vnet1Name": {
                "value": "[variables('VNet1Name')]"
              },    
              "vnet2Name": {
                "value": "[variables('VNet2Name')]"
              }                                                                                                                                                                              
          }
      }
    },                     
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "CreateManagedID",   
      "properties": {
          "mode": "Incremental",
          "templateLink": {
              "uri": "[uri(parameters('_artifactsLocation'), concat('linkedtemplates/managedidentity.json', parameters('_artifactsLocationSasToken')))]",
              "contentVersion": "1.0.0.0"
          },
          "parameters": {
              "ManagedIDName": {
                  "value": "[variables('ManagedIDName')]"
              },
              "location": {
                  "value": "[resourceGroup().location]"
              }
          }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "AssignManagedIDDNSZone",
      "dependsOn": [
        "DeployPrivateDNSZone",
        "CreateManagedID"
      ],        
      "properties": {
          "mode": "Incremental",
          "templateLink": {
              "uri": "[uri(parameters('_artifactsLocation'), concat('linkedtemplates/roleassignment.json', parameters('_artifactsLocationSasToken')))]",
              "contentVersion": "1.0.0.0"
          },
          "parameters": {
              "PrincipalID": {
                  "value": "[reference('CreateManagedID').outputs.principalId.value]"
              },
              "RoleDefinitionID": {
                  "value": "[variables('DNSZoneContributor')]"
              },
              "roleAssignmentGuid": {
                  "value": "[parameters('roleAssignmentGuid1')]"
              }              
          }
      }
    }, 
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "AssignManagedIDSpokeVNet",
      "dependsOn": [
        "DeploySpokeVNet",
        "CreateManagedID",
        "AssignManagedIDDNSZone"        
      ],        
      "properties": {
          "mode": "Incremental",
          "templateLink": {
              "uri": "[uri(parameters('_artifactsLocation'), concat('linkedtemplates/roleassignment.json', parameters('_artifactsLocationSasToken')))]",
              "contentVersion": "1.0.0.0"
          },
          "parameters": {
              "PrincipalID": {
                  "value": "[reference('CreateManagedID').outputs.principalId.value]"
              },
              "RoleDefinitionID": {
                  "value": "[variables('SpokeVNetContributor')]"
              },
              "roleAssignmentGuid": {
                  "value": "[parameters('roleAssignmentGuid2')]"
              }              
          }
      }
    },         
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "DeployAKSCluster",     
      "properties": {
        "mode": "Incremental",
        "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'), concat('linkedtemplates/privateakscluster.json', parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
        },
        "parameters": {
            "AKSClusterName": {
                "value": "[variables('AKSClusterName')]"
            },
            "vnetName": {
                "value": "[variables('vnet2Name')]"
            },            
            "subnetName": {
                "value": "[variables('vnet2subnet1Name')]"
            },  
            "serviceCidr": {
                "value": "[variables('vnet2subnet1Prefix')]"
            },
            "dnsServiceIP": {
                "value": "[variables('dnsserviceIP')]"
            },
            "dockerBridgeCidr": {
                "value": "[variables('DockerBridgeCIDR')]"
            },                                    
            "DNSZone": {
                "value": "[variables('DNSZone')]"
            },     
            "ManagedIDName": {
                "value": "[variables('ManagedIDName')]"
            },                     
            "principalID": {
                "value": "[reference('CreateManagedID').outputs.principalId.value]"
            },              
            "clientID": {
                "value": "[reference('CreateManagedID').outputs.clientId.value]"
            },                      
            "location": {
                "value": "[resourceGroup().location]"
            }                                                                                                                   
        }
      }
    }               
  ]
}