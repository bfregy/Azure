{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminUsername": {
        "type": "string",
        "metadata": {
            "description": "The name of the Administrator of the new VM and Domain"
        }
    },
    "adminPassword": {
        "type": "securestring",
      "metadata": {
        "description": "The password for the Administrator account of the new VM and Domain"
      }
    },
    "WindowsServerLicenseType": {
      "type": "string",
      "defaultValue": "None",
      "allowedValues": [
        "None",
        "Windows_Server"
      ],      
      "metadata": {
          "description": "Windows Server OS License Type"
      }
    },     
    "NamingConvention": {
      "type": "string",
      "defaultValue": "khl",
      "metadata": {
        "description": "Environment Naming Convention"
      }
    },
    "vnet1ID": {
      "type": "string",
      "defaultValue": "10.1",
      "metadata": {
        "description": "VNet1 Prefix"
      }
    },    
    "OSVersion": {
        "type": "string",
        "defaultValue": "2019-Datacenter",
        "allowedValues": [
          "2019-Datacenter",
          "2016-Datacenter"
        ],            
        "metadata": {
            "description": "SQL OS Version"
        }
    },
    "VMSize": {
        "type": "string",
        "defaultValue": "Standard_D2s_v3",
        "metadata": {
            "description": "VMSize"
        }
    },        
    "_artifactsLocation": {
      "type": "string",
      "metadata": {
          "description": "The location of resources, such as templates and DSC modules, that the template depends on"
      },
      "defaultValue": "[deployment().properties.templateLink.uri]"
    },
    "_artifactsLocationSasToken": {
        "type": "securestring",
        "metadata": {
            "description": "Auto-generated token to access _artifactsLocation. Leave it blank unless you need to provide your own value."
        },
        "defaultValue": ""
    }    
  },
  "variables": {
    "vnet1Name": "[concat(parameters('NamingConvention'),'-VNet1')]",
    "vnet1Prefix": "[concat(parameters('vnet1ID'),'.0.0/16')]",
    "vnet1subnet1Name": "[concat(parameters('NamingConvention'),'-VNet1-Subnet1')]",    
    "vnet1subnet1Prefix": "[concat(parameters('vnet1ID'),'.1.0/24')]",    
    "vnet1BastionsubnetPrefix": "[concat(parameters('vnet1ID'),'.253.0/24')]",           
    "vnet1FirewallsubnetPrefix": "[concat(parameters('vnet1ID'),'.254.0/24')]",
    "FirewallName": "[concat(parameters('NamingConvention'),'-Firewall')]",                   
    "vmname": "[concat(parameters('NamingConvention'),'-vm-01')]",                      
    "vmIP": "[concat(parameters('vnet1ID'),'.1.',variables('vmlastoctet'))]", 
    "vmlastoctet": "123"
  },  
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "VNet1",
      "properties": {
          "mode": "Incremental",
          "templateLink": {
              "uri": "[uri(parameters('_artifactsLocation'), concat('nestedtemplates/vnet.json', parameters('_artifactsLocationSasToken')))]",
              "contentVersion": "1.0.0.0"
          },
          "parameters": {
              "vnetName": {
                  "value": "[variables('vnet1Name')]"
              },
              "vnetprefix": {
                  "value": "[variables('vnet1Prefix')]"
              },
              "subnet1Name": {
                  "value": "[variables('vnet1subnet1Name')]"
              },
              "subnet1Prefix": {
                  "value": "[variables('vnet1subnet1Prefix')]"
              },           
              "BastionsubnetPrefix": {
                "value": "[variables('vnet1BastionsubnetPrefix')]"
              },     
              "FirewallsubnetPrefix": {
                "value": "[variables('vnet1FirewallsubnetPrefix')]"
              },                            
              "location": {
                  "value": "[resourceGroup().location]"
              }
          }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "DeployAzureFirewall",
      "dependsOn": [
        "VNet1"
      ],      
      "properties": {
          "mode": "Incremental",
          "templateLink": {
              "uri": "[uri(parameters('_artifactsLocation'), concat('nestedtemplates/AzureFirewall.json', parameters('_artifactsLocationSasToken')))]",
              "contentVersion": "1.0.0.0"
          },
          "parameters": {
              "FirewallName": {
                  "value": "[variables('FirewallName')]"
              },
              "vnetName": {
                  "value": "[variables('vnet1Name')]"
              },
              "subnetName": {
                  "value": "AzureFirewallSubnet"
              },                          
              "location": {
                  "value": "[resourceGroup().location]"
              }
          }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "deployVM",
      "dependsOn": [
        "VNet1"
      ],      
      "properties": {
          "mode": "Incremental",
          "templateLink": {
              "uri": "[uri(parameters('_artifactsLocation'), concat('nestedtemplates/1nic-1disk-vm.json', parameters('_artifactsLocationSasToken')))]",
              "contentVersion": "1.0.0.0"
          },
          "parameters": {
              "computerName": {
                  "value": "[variables('vmname')]"
              },
              "computerIP": {
                  "value": "[variables('vmIP')]"
              },
              "Publisher": {
                  "value": "MicrosoftWindowsServer"
              },
              "Offer": {
                  "value": "WindowsServer"
              },
              "OSVersion": {
                "value": "[parameters('OSVersion')]"
              },              
              "LicenseType": {
                "value": "[parameters('WindowsServerLicenseType')]"
              },            
              "VMSize": {
                "value": "[parameters('VMSize')]"
              },
              "vnetName": {
                "value": "[variables('vnet1Name')]"
              },            
              "subnetName": {
                "value": "[variables('vnet1subnet1Name')]"
              },                                                                                                                   
              "adminUsername": {
                "value": "[parameters('adminUsername')]"
              },                                                                                                            
              "adminPassword": {
                "value": "[parameters('adminPassword')]"
              },                                                                                                                                        
              "location": {
                  "value": "[resourceGroup().location]"
              }
          }
      }
    }       
  ]
}